{"version":3,"file":"component---node-modules-gatsby-theme-blog-core-src-templates-posts-query-js-921e257da10c9941bf64.js","mappings":"8SAOMA,EAAW,SAAH,OAAMC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAAO,OAC5CC,EAAAA,EAAAA,IAAAA,UAAAA,CAASC,MAAO,CAAEC,OAAQ,YACxBF,EAAAA,EAAAA,IAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAACG,EAAAA,EAAK,MACJH,EAAAA,EAAAA,IAACI,EAAAA,GAAI,CAACC,GAAIR,EAAMI,MAAO,CAAEK,eAAgB,UACvCN,EAAAA,EAAAA,IAACO,EAAAA,EAAK,CAACC,MAAO,EAAGP,MAAO,CAAEQ,MAAO,SAC9Bb,EAAMc,eAAiBb,EAAKa,iBAGjCV,EAAAA,EAAAA,IAACW,EAAAA,EAAI,CAACF,MAAM,SAASG,KAAK,MACvBd,MAIPE,EAAAA,EAAAA,IAAAA,UAAAA,KAAUD,KAIRc,EAAW,SAAH,OAAMC,EAAK,EAALA,MAAK,OACvBd,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,KACGc,EAAMC,KAAI,SAACC,GAAI,OACdhB,EAAAA,EAAAA,IAACL,GAAQ,QAACsB,IAAKD,EAAKnB,MAAUmB,SAiBpC,EAZc,SAAH,GAAc,EAARE,SAAN,IAAgBJ,EAAK,EAALA,MAAkBK,GAAF,EAATC,UAAsB,EAAXD,aAAW,OACtDnB,EAAAA,EAAAA,IAACqB,EAAAA,EAAM,CAACF,YAAaA,IACnBnB,EAAAA,EAAAA,IAACsB,EAAAA,EAAG,CAAC1B,MAAM,UACXI,EAAAA,EAAAA,IAACuB,EAAAA,EAAK,CAACC,EAAG,OACVxB,EAAAA,EAAAA,IAACyB,EAAAA,EAAO,CAACb,KAAK,OACZZ,EAAAA,EAAAA,IAAAA,OAAAA,MACEA,EAAAA,EAAAA,IAACa,EAAQ,CAACC,MAAOA,QChCzB,EAJiB,SAAH,OAAMI,EAAQ,EAARA,SAAUJ,EAAK,EAALA,MAAOM,EAAS,EAATA,UAAS,OAC5C,QAAC,EAAK,CAACF,SAAUA,EAAUJ,MAAOA,EAAOM,UAAWA,KCDtD,ECAqB,SAAH,GAA4B,IAAtBF,EAAQ,EAARA,SAAUQ,EAAI,EAAJA,KACxBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACd,OACE,QAAC,EAAK,CACJV,SAAUA,EACVJ,MAAOc,EAAYC,MACnBT,UAAWO,EAAKG,aAAalC,MAC7BuB,YAAaQ,EAAKG,aAAaC","sources":["webpack://mantine-gatsby-blog-template/./src/components/blog.tsx","webpack://mantine-gatsby-blog-template/./src/gatsby-theme-blog/components/posts.js","webpack://mantine-gatsby-blog-template/./node_modules/gatsby-theme-blog-core/src/templates/posts-query.js","webpack://mantine-gatsby-blog-template/./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/posts.js"],"sourcesContent":["import { Group, Space, Text, Title } from '@mantine/core';\nimport { Link } from 'gatsby';\nimport SEO from 'gatsby-theme-blog/src/components/seo';\nimport * as React from 'react';\nimport Layout from './Layout/Layout';\nimport { Section } from './Layout/Section';\n\nconst PostLink = ({ title, slug, date, excerpt }) => (\n  <article style={{ margin: '30px 0' }}>\n    <header>\n      <Group>\n        <Link to={slug} style={{ textDecoration: 'none' }}>\n          <Title order={2} style={{ color: 'gray' }}>\n            {title.toUpperCase() || slug.toUpperCase()}\n          </Title>\n        </Link>\n        <Text color=\"dimmed\" size=\"sm\">\n          {date}\n        </Text>\n      </Group>\n    </header>\n    <section>{excerpt}</section>\n  </article>\n);\n\nconst PostList = ({ posts }) => (\n  <>\n    {posts.map((node) => (\n      <PostLink key={node.slug} {...node} />\n    ))}\n  </>\n);\n\nconst Posts = ({ location, posts, siteTitle, socialLinks }) => (\n  <Layout socialLinks={socialLinks}>\n    <SEO title=\"Blog\" />\n    <Space h={150} />\n    <Section size=\"sm\">\n      <main>\n        <PostList posts={posts} />\n      </main>\n    </Section>\n  </Layout>\n);\n\nexport default Posts;\n","import * as React from 'react';\nimport Posts from '../../components/blog';\n\nconst NewPosts = ({ location, posts, siteTitle }) => (\n  <Posts location={location} posts={posts} siteTitle={siteTitle} />\n);\n\nexport default NewPosts;\n","import { graphql } from \"gatsby\"\nimport PostsPage from \"../components/posts\"\n\nexport default PostsPage\n\nexport const query = graphql`\n  query PostsQuery($limit: Int!, $filter: BlogPostFilterInput) {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    allBlogPost(\n      sort: { fields: [date, title], order: DESC }\n      filter: $filter\n      limit: $limit\n    ) {\n      nodes {\n        id\n        excerpt\n        slug\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Posts from \"../../components/posts\"\n\nconst PostsWrapper = ({ location, data }) => {\n  const { site, allBlogPost } = data\n  return (\n    <Posts\n      location={location}\n      posts={allBlogPost.nodes}\n      siteTitle={site.siteMetadata.title}\n      socialLinks={site.siteMetadata.social}\n    />\n  )\n}\n\nexport default PostsWrapper\n"],"names":["PostLink","title","slug","date","excerpt","___EmotionJSX","style","margin","Group","Link","to","textDecoration","Title","order","color","toUpperCase","Text","size","PostList","posts","map","node","key","location","socialLinks","siteTitle","Layout","SEO","Space","h","Section","data","site","allBlogPost","nodes","siteMetadata","social"],"sourceRoot":""}